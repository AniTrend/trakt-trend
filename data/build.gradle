plugins {
    id("com.android.library")
    id("kotlin-android")
    id("kotlin-kapt")
    id("kotlin-android-extensions")
}

apply from: "../gradle/gradle-common-config.gradle"

android {
    defaultConfig {
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        "room.schemaLocation": "$projectDir/schemas".toString(),
                        "room.expandingProjections": "true",
                        "room.incremental": "true"
                ]
            }
        }
    }

    buildTypes {
        buildTypes.each {
            def secretsProps = new Properties()
            file(".config/secrets.properties").withInputStream {
                stream -> secretsProps.load(stream)
            }
            it.buildConfigField("String", "clientId", secretsProps['clientId'])
            it.buildConfigField("String", "clientSecret", secretsProps['clientSecret'])
            it.buildConfigField("String", "tmdbSecret", secretsProps['tmdbSecret'])

            def configProps = new Properties()
            file(".config/configuration.properties").withInputStream {
                stream -> configProps.load(stream)
            }
            it.buildConfigField("String", "redirectUri", configProps['redirectUri'])
            it.buildConfigField("String", "registrationUrl", configProps['registrationUrl'])
            it.buildConfigField("String", "apiAuthUrl", configProps['apiAuthUrl'])
            it.buildConfigField("String", "apiUrl", configProps['apiUrl'])
        }
    }
}

ext {
    roomigrant = '0.1.7'
    chuncker = '3.2.0'
}

dependencies {

    /** Platform Dependencies */
    implementation project(":support-domain")
    implementation project(":support-data")
    implementation project(":support-ext")
    implementation project(":domain")


    /** Koin AndroidX Dependency Injection */
    implementation("org.koin:koin-core:$koin")
    implementation("org.koin:koin-core-ext:$koin")
    implementation("org.koin:koin-androidx-scope:$koin")

    /** Architecture Components */
    implementation("androidx.core:core-ktx:$ktx")
    implementation("androidx.work:work-runtime-ktx:$workerKtx")
    implementation("androidx.lifecycle:lifecycle-extensions:$lifecycleX")
    implementation("androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleX")
    implementation("androidx.lifecycle:lifecycle-runtime-ktx:$lifecycleX")
    implementation("androidx.paging:paging-runtime-ktx:$pagingKtx")
    implementation("androidx.paging:paging-runtime:$paging")
    implementation("androidx.room:room-runtime:$room")
    implementation("androidx.room:room-ktx:$room")
    kapt("androidx.room:room-compiler:$room")

    /** Tmdb & Trakt Wrappers */
    implementation("com.uwetrottmann.tmdb2:tmdb-java:2.2.0")
    implementation('com.uwetrottmann.trakt5:trakt-java:6.5.0') {
        exclude group: 'org.threeten', module: 'threetenbp'
    }
    implementation("com.jakewharton.threetenabp:threetenabp:$threetenabp")

    /** Retrofit Libraries */
    implementation("com.squareup.retrofit2:retrofit:$retrofit")
    implementation("com.squareup.retrofit2:converter-gson:$retrofit")
    implementation("com.squareup.okhttp3:logging-interceptor:$okHttpLogger")

    debugImplementation("com.github.ChuckerTeam.Chucker:library:$chuncker")
    releaseImplementation("com.github.ChuckerTeam.Chucker:library-no-op:$chuncker")
}